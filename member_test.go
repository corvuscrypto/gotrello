package trello

import "testing"

func testMembers(t *testing.T) {

	testModels := []model{
		Members.ID(ID),
		Members.ID(ID).AvatarHash,
		Members.ID(ID).AvatarSource,
		Members.ID(ID).Bio,
		Members.ID(ID).BioData,
		Members.ID(ID).Confirmed,
		Members.ID(ID).Email,
		Members.ID(ID).FullName,
		Members.ID(ID).GravatarHash,
		Members.ID(ID).IdBoards,
		Members.ID(ID).IdBoardsPinned,
		Members.ID(ID).IdOrganizations,
		Members.ID(ID).IdPremOrgsAdmin,
		Members.ID(ID).Initials,
		Members.ID(ID).LoginTypes,
		Members.ID(ID).MemberType,
		Members.ID(ID).OneTimeMessagesDismissed,
		Members.ID(ID).Prefs,
		Members.ID(ID).PremiumFeatures,
		Members.ID(ID).Products,
		Members.ID(ID).Status,
		Members.ID(ID).Trophies,
		Members.ID(ID).UploadedAvatarHash,
		Members.ID(ID).Url,
		Members.ID(ID).Username,
		Members.ID(ID).Actions,
		Members.ID(ID).BoardBackgrounds,
		Members.ID(ID).BoardBackgrounds.ID(ID),
		Members.ID(ID).BoardStars,
		Members.ID(ID).BoardStars.ID(ID),
		Members.ID(ID).Boards,
		Members.ID(ID).Boards.All,
		Members.ID(ID).Boards.Closed,
		Members.ID(ID).Boards.Members,
		Members.ID(ID).Boards.Open,
		Members.ID(ID).Boards.Organization,
		Members.ID(ID).Boards.Pinned,
		Members.ID(ID).Boards.Public,
		Members.ID(ID).Boards.Starred,
		Members.ID(ID).Boards.Unpinned,
		Members.ID(ID).BoardsInvited,
		Members.ID(ID).BoardsInvited.Closed,
		Members.ID(ID).BoardsInvited.DateLastActivity,
		Members.ID(ID).BoardsInvited.DateLastView,
		Members.ID(ID).BoardsInvited.Desc,
		Members.ID(ID).BoardsInvited.DescData,
		Members.ID(ID).BoardsInvited.IdOrganization,
		Members.ID(ID).BoardsInvited.Invitations,
		Members.ID(ID).BoardsInvited.Invited,
		Members.ID(ID).BoardsInvited.LabelNames,
		Members.ID(ID).BoardsInvited.Memberships,
		Members.ID(ID).BoardsInvited.Name,
		Members.ID(ID).BoardsInvited.Pinned,
		Members.ID(ID).BoardsInvited.PowerUps,
		Members.ID(ID).BoardsInvited.Prefs,
		Members.ID(ID).BoardsInvited.ShortLink,
		Members.ID(ID).BoardsInvited.ShortUrl,
		Members.ID(ID).BoardsInvited.Starred,
		Members.ID(ID).BoardsInvited.Subscribed,
		Members.ID(ID).BoardsInvited.Url,
		Members.ID(ID).Cards,
		Members.ID(ID).Cards.All,
		Members.ID(ID).Cards.Closed,
		Members.ID(ID).Cards.None,
		Members.ID(ID).Cards.Open,
		Members.ID(ID).Cards.Visible,
		Members.ID(ID).CustomBoardBackgrounds,
		Members.ID(ID).CustomBoardBackgrounds.ID(ID),
		Members.ID(ID).CustomEmoji,
		Members.ID(ID).CustomEmoji.ID(ID),
		Members.ID(ID).CustomStickers,
		Members.ID(ID).CustomStickers.ID(ID),
		Members.ID(ID).Deltas,
		Members.ID(ID).Notifications,
		Members.ID(ID).Notifications.AddAdminToBoard,
		Members.ID(ID).Notifications.AddAdminToOrganization,
		Members.ID(ID).Notifications.AddedAttachmentToCard,
		Members.ID(ID).Notifications.AddedMemberToCard,
		Members.ID(ID).Notifications.AddedToBoard,
		Members.ID(ID).Notifications.AddedToCard,
		Members.ID(ID).Notifications.AddedToOrganization,
		Members.ID(ID).Notifications.CardDueSoon,
		Members.ID(ID).Notifications.ChangeCard,
		Members.ID(ID).Notifications.CloseBoard,
		Members.ID(ID).Notifications.CommentCard,
		Members.ID(ID).Notifications.CreatedCard,
		Members.ID(ID).Notifications.DeclinedInvitationToBoard,
		Members.ID(ID).Notifications.DeclinedInvitationToOrganization,
		Members.ID(ID).Notifications.InvitedToBoard,
		Members.ID(ID).Notifications.InvitedToOrganization,
		Members.ID(ID).Notifications.MakeAdminOfBoard,
		Members.ID(ID).Notifications.MakeAdminOfOrganization,
		Members.ID(ID).Notifications.MemberJoinedTrello,
		Members.ID(ID).Notifications.MentionedOnCard,
		Members.ID(ID).Notifications.RemovedFromBoard,
		Members.ID(ID).Notifications.RemovedFromCard,
		Members.ID(ID).Notifications.RemovedFromOrganization,
		Members.ID(ID).Notifications.RemovedMemberFromCard,
		Members.ID(ID).Notifications.UnconfirmedInvitedToBoard,
		Members.ID(ID).Notifications.UnconfirmedInvitedToOrganization,
		Members.ID(ID).Notifications.UpdateCheckItemStateOnCard,
		Members.ID(ID).Organizations,
		Members.ID(ID).Organizations.All,
		Members.ID(ID).Organizations.Members,
		Members.ID(ID).Organizations.None,
		Members.ID(ID).Organizations.Public,
		Members.ID(ID).OrganizationsInvited,
		Members.ID(ID).OrganizationsInvited.BillableMemberCount,
		Members.ID(ID).OrganizationsInvited.Desc,
		Members.ID(ID).OrganizationsInvited.DescData,
		Members.ID(ID).OrganizationsInvited.DisplayName,
		Members.ID(ID).OrganizationsInvited.IdBoards,
		Members.ID(ID).OrganizationsInvited.Invitations,
		Members.ID(ID).OrganizationsInvited.Invited,
		Members.ID(ID).OrganizationsInvited.LogoHash,
		Members.ID(ID).OrganizationsInvited.Memberships,
		Members.ID(ID).OrganizationsInvited.Name,
		Members.ID(ID).OrganizationsInvited.PowerUps,
		Members.ID(ID).OrganizationsInvited.Prefs,
		Members.ID(ID).OrganizationsInvited.PremiumFeatures,
		Members.ID(ID).OrganizationsInvited.Products,
		Members.ID(ID).OrganizationsInvited.Url,
		Members.ID(ID).OrganizationsInvited.Website,
		Members.ID(ID).SavedSearches,
		Members.ID(ID).SavedSearches.ID(ID),
		Members.ID(ID).Tokens,
		Members.ID(ID).BoardStars.ID(ID).IdBoard,
		Members.ID(ID).BoardStars.ID(ID).Pos,
		Members.ID(ID).Prefs.ColorBlind,
		Members.ID(ID).Prefs.Locale,
		Members.ID(ID).Prefs.MinutesBetweenSummaries,
		Members.ID(ID).SavedSearches.ID(ID).Name,
		Members.ID(ID).SavedSearches.ID(ID).Pos,
		Members.ID(ID).SavedSearches.ID(ID).Query,
		Members.ID(ID).Avatar,
	}

	testExpects := []string{
		"/members/" + ID,
		"/members/" + ID + "/avatarHash",
		"/members/" + ID + "/avatarSource",
		"/members/" + ID + "/bio",
		"/members/" + ID + "/bioData",
		"/members/" + ID + "/confirmed",
		"/members/" + ID + "/email",
		"/members/" + ID + "/fullName",
		"/members/" + ID + "/gravatarHash",
		"/members/" + ID + "/idBoards",
		"/members/" + ID + "/idBoardsPinned",
		"/members/" + ID + "/idOrganizations",
		"/members/" + ID + "/idPremOrgsAdmin",
		"/members/" + ID + "/initials",
		"/members/" + ID + "/loginTypes",
		"/members/" + ID + "/memberType",
		"/members/" + ID + "/oneTimeMessagesDismissed",
		"/members/" + ID + "/prefs",
		"/members/" + ID + "/premiumFeatures",
		"/members/" + ID + "/products",
		"/members/" + ID + "/status",
		"/members/" + ID + "/trophies",
		"/members/" + ID + "/uploadedAvatarHash",
		"/members/" + ID + "/url",
		"/members/" + ID + "/username",
		"/members/" + ID + "/actions",
		"/members/" + ID + "/boardBackgrounds",
		"/members/" + ID + "/boardBackgrounds/" + ID,
		"/members/" + ID + "/boardStars",
		"/members/" + ID + "/boardStars/" + ID,
		"/members/" + ID + "/boards",
		"/members/" + ID + "/boards/all",
		"/members/" + ID + "/boards/closed",
		"/members/" + ID + "/boards/members",
		"/members/" + ID + "/boards/open",
		"/members/" + ID + "/boards/organization",
		"/members/" + ID + "/boards/pinned",
		"/members/" + ID + "/boards/public",
		"/members/" + ID + "/boards/starred",
		"/members/" + ID + "/boards/unpinned",
		"/members/" + ID + "/boardsInvited",
		"/members/" + ID + "/boardsInvited/closed",
		"/members/" + ID + "/boardsInvited/dateLastActivity",
		"/members/" + ID + "/boardsInvited/dateLastView",
		"/members/" + ID + "/boardsInvited/desc",
		"/members/" + ID + "/boardsInvited/descData",
		"/members/" + ID + "/boardsInvited/idOrganization",
		"/members/" + ID + "/boardsInvited/invitations",
		"/members/" + ID + "/boardsInvited/invited",
		"/members/" + ID + "/boardsInvited/labelNames",
		"/members/" + ID + "/boardsInvited/memberships",
		"/members/" + ID + "/boardsInvited/name",
		"/members/" + ID + "/boardsInvited/pinned",
		"/members/" + ID + "/boardsInvited/powerUps",
		"/members/" + ID + "/boardsInvited/prefs",
		"/members/" + ID + "/boardsInvited/shortLink",
		"/members/" + ID + "/boardsInvited/shortUrl",
		"/members/" + ID + "/boardsInvited/starred",
		"/members/" + ID + "/boardsInvited/subscribed",
		"/members/" + ID + "/boardsInvited/url",
		"/members/" + ID + "/cards",
		"/members/" + ID + "/cards/all",
		"/members/" + ID + "/cards/closed",
		"/members/" + ID + "/cards/none",
		"/members/" + ID + "/cards/open",
		"/members/" + ID + "/cards/visible",
		"/members/" + ID + "/customBoardBackgrounds",
		"/members/" + ID + "/customBoardBackgrounds/" + ID,
		"/members/" + ID + "/customEmoji",
		"/members/" + ID + "/customEmoji/" + ID,
		"/members/" + ID + "/customStickers",
		"/members/" + ID + "/customStickers/" + ID,
		"/members/" + ID + "/deltas",
		"/members/" + ID + "/notifications",
		"/members/" + ID + "/notifications/addAdminToBoard",
		"/members/" + ID + "/notifications/addAdminToOrganization",
		"/members/" + ID + "/notifications/addedAttachmentToCard",
		"/members/" + ID + "/notifications/addedMemberToCard",
		"/members/" + ID + "/notifications/addedToBoard",
		"/members/" + ID + "/notifications/addedToCard",
		"/members/" + ID + "/notifications/addedToOrganization",
		"/members/" + ID + "/notifications/cardDueSoon",
		"/members/" + ID + "/notifications/changeCard",
		"/members/" + ID + "/notifications/closeBoard",
		"/members/" + ID + "/notifications/commentCard",
		"/members/" + ID + "/notifications/createdCard",
		"/members/" + ID + "/notifications/declinedInvitationToBoard",
		"/members/" + ID + "/notifications/declinedInvitationToOrganization",
		"/members/" + ID + "/notifications/invitedToBoard",
		"/members/" + ID + "/notifications/invitedToOrganization",
		"/members/" + ID + "/notifications/makeAdminOfBoard",
		"/members/" + ID + "/notifications/makeAdminOfOrganization",
		"/members/" + ID + "/notifications/memberJoinedTrello",
		"/members/" + ID + "/notifications/mentionedOnCard",
		"/members/" + ID + "/notifications/removedFromBoard",
		"/members/" + ID + "/notifications/removedFromCard",
		"/members/" + ID + "/notifications/removedFromOrganization",
		"/members/" + ID + "/notifications/removedMemberFromCard",
		"/members/" + ID + "/notifications/unconfirmedInvitedToBoard",
		"/members/" + ID + "/notifications/unconfirmedInvitedToOrganization",
		"/members/" + ID + "/notifications/updateCheckItemStateOnCard",
		"/members/" + ID + "/organizations",
		"/members/" + ID + "/organizations/all",
		"/members/" + ID + "/organizations/members",
		"/members/" + ID + "/organizations/none",
		"/members/" + ID + "/organizations/public",
		"/members/" + ID + "/organizationsInvited",
		"/members/" + ID + "/organizationsInvited/billableMemberCount",
		"/members/" + ID + "/organizationsInvited/desc",
		"/members/" + ID + "/organizationsInvited/descData",
		"/members/" + ID + "/organizationsInvited/displayName",
		"/members/" + ID + "/organizationsInvited/idBoards",
		"/members/" + ID + "/organizationsInvited/invitations",
		"/members/" + ID + "/organizationsInvited/invited",
		"/members/" + ID + "/organizationsInvited/logoHash",
		"/members/" + ID + "/organizationsInvited/memberships",
		"/members/" + ID + "/organizationsInvited/name",
		"/members/" + ID + "/organizationsInvited/powerUps",
		"/members/" + ID + "/organizationsInvited/prefs",
		"/members/" + ID + "/organizationsInvited/premiumFeatures",
		"/members/" + ID + "/organizationsInvited/products",
		"/members/" + ID + "/organizationsInvited/url",
		"/members/" + ID + "/organizationsInvited/website",
		"/members/" + ID + "/savedSearches",
		"/members/" + ID + "/savedSearches/" + ID,
		"/members/" + ID + "/tokens",
		"/members/" + ID + "/boardStars/" + ID + "/idBoard",
		"/members/" + ID + "/boardStars/" + ID + "/pos",
		"/members/" + ID + "/prefs/colorBlind",
		"/members/" + ID + "/prefs/locale",
		"/members/" + ID + "/prefs/minutesBetweenSummaries",
		"/members/" + ID + "/savedSearches/" + ID + "/name",
		"/members/" + ID + "/savedSearches/" + ID + "/pos",
		"/members/" + ID + "/savedSearches/" + ID + "/query",
		"/members/" + ID + "/avatar",
	}
	for i := range testModels {
		m := testModels[i]
		e := testExpects[i]
		if s := GetURL(m); s != e {
			t.Errorf("test model# %d: Expected \"%s\", Got \"%s\"\n", i, e, s)
		}
	}
}
